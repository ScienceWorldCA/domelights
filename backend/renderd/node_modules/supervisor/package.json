{
  "name": "supervisor",
  "version": "0.6.0",
  "description": "A supervisor program for running nodejs programs",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me"
  },
  "contributors": [
    {
      "name": "Todd Branchflower",
      "email": "toddbran@stanford.edu"
    },
    {
      "name": "Giannis Dzegoutanis",
      "email": "erasmospunk@gmail.com"
    },
    {
      "name": "Brian Ehmann",
      "email": "behmann@gmail.com"
    },
    {
      "name": "Corey Jewett",
      "email": "cj@syntheticplayground.com"
    },
    {
      "name": "Taka Kojima",
      "email": "taka.kojima@ff0000.com"
    },
    {
      "name": "Aneil Mallavarapu",
      "email": "aneil@blipboard.com"
    },
    {
      "name": "Doug McCall",
      "email": "dhm116@psu.edu"
    },
    {
      "name": "Mathieu M-Gosselin",
      "email": "mathieumg@gmail.com"
    },
    {
      "name": "David Murdoch",
      "email": "hello@davidmurdoch.com"
    },
    {
      "name": "mx1700",
      "email": "mx1700@gmail.com"
    },
    {
      "name": "Michiel ter Reehorst",
      "email": "jm.ter.reehorst@jamiter.com"
    },
    {
      "name": "Jonathan 'Wolf' Rentzsch",
      "email": "jwr.git@redshed.net"
    },
    {
      "name": "John Roberts",
      "email": "jroberts@logitech.com"
    },
    {
      "name": "Scott Sanders",
      "email": "scott@stonecobra.com"
    },
    {
      "name": "Thomas Schaaf",
      "email": "schaaf@komola.de"
    },
    {
      "name": "Fernando H. Silva",
      "email": "ferhensil@gmail.com"
    },
    {
      "name": "Kei Son",
      "email": "heyacct@gmail.com"
    },
    {
      "name": "David Taylor",
      "email": "david@zensatellite.com"
    },
    {
      "name": "Antonio TouriÃ±o",
      "email": "atourino@gmail.com"
    },
    {
      "name": "Oliver Wong",
      "email": "oliver@owiber.com"
    },
    {
      "name": "Di Wu",
      "email": "dw323@cornell.edu"
    },
    {
      "name": "Jesse Yang",
      "email": "jyyjcc@gmail.com"
    },
    {
      "name": "Ian Young",
      "email": "ian.greenleaf@gmail.com"
    },
    {
      "name": "jazzzz",
      "email": "jazzzz@gmail.com"
    },
    {
      "name": "philpill",
      "email": "github@philpill.net"
    },
    {
      "name": "rma4ok",
      "email": "rma4ok@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/isaacs/node-supervisor.git"
  },
  "bugs": {
    "url": "https://github.com/isaacs/node-supervisor/issues"
  },
  "homepage": "https://github.com/isaacs/node-supervisor/",
  "main": "lib/supervisor.js",
  "bin": {
    "node-supervisor": "lib/cli-wrapper.js",
    "supervisor": "lib/cli-wrapper.js"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "preferGlobal": true,
  "readme": "# node-supervisor\n\nA little supervisor script for nodejs. It runs your program, and\nwatches for code changes, so you can have hot-code reloading-ish\nbehavior, without worrying about memory leaks and making sure you\nclean up all the inter-module references, and without a whole new\n`require` system.\n\n## node-supervisor -?\n\n\n    Node Supervisor is used to restart programs when they crash.\n    It can also be used to restart programs when a *.js file changes.\n\n    Usage:\n      supervisor [options] <program>\n      supervisor [options] -- <program> [args ...]\n\n    Required:\n      <program>\n        The program to run.\n\n    Options:\n      -w|--watch <watchItems>\n        A comma-delimited list of folders or js files to watch for changes.\n        When a change to a js file occurs, reload the program\n        Default is '.'\n\n      -i|--ignore <ignoreItems>\n        A comma-delimited list of folders to ignore for changes.\n        No default\n\n      -p|--poll-interval <milliseconds>\n        How often to poll watched files for changes.\n        Defaults to Node default.\n\n      -e|--extensions <extensions>\n        A comma-delimited list of file extensions to watch for changes.\n        Used when --watch option includes folders\n        Default is 'node,js'\n\n      -x|--exec <executable>\n        The executable that runs the specified program.\n        Default is 'node'\n\n      --debug\n        Start node with --debug flag.\n\n      --debug-brk\n        Start node with --debug-brk flag.\n\n      --harmony\n        Start node with --harmony flag.\n\n      -n|--no-restart-on error|exit\n        Don't automatically restart the supervised program if it ends.\n        Supervisor will wait for a change in the source files.\n        If \"error\", an exit code of 0 will still restart.\n        If \"exit\", no restart regardless of exit code.\n\n      --force-watch\n        Use fs.watch instead of fs.watchFile.\n        This may be useful if you see a high cpu load on a windows machine.\n\n      -h|--help|-?\n        Display these usage instructions.\n\n      -q|--quiet\n        Suppress DEBUG messages\n\n    Examples:\n      supervisor myapp.js\n      supervisor myapp.coffee\n      supervisor -w scripts -e myext -x myrunner myapp\n      supervisor -w lib,server.js,config.js server.js\n      supervisor -- server.js -h host -p port\n\n\n## Simple Install\n\nJust run:\n\n    npm install supervisor -g\n\n## Fancy Install\n\nGet this code, and then do this:\n\n    npm link\n",
  "readmeFilename": "README.md",
  "_id": "supervisor@0.6.0",
  "dist": {
    "shasum": "53ab95f1648e5180447352b9764f2b867f337fd3"
  },
  "_from": "supervisor@",
  "_resolved": "https://registry.npmjs.org/supervisor/-/supervisor-0.6.0.tgz"
}
